// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MillEngine.API;

#nullable disable

namespace MillEngine.API.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240201214759_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.CardEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckCommanderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckMainId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckMaybeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckPartnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckSideId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckWishId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScryfallId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SetId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("DeckCommanderId")
                        .IsUnique();

                    b.HasIndex("DeckMainId");

                    b.HasIndex("DeckMaybeId");

                    b.HasIndex("DeckPartnerId")
                        .IsUnique();

                    b.HasIndex("DeckSideId");

                    b.HasIndex("DeckWishId");

                    b.ToTable("LibraryCards");
                });

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.CollectionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LibraryCollections");
                });

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.DeckEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LibraryDecks");
                });

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.CardEntry", b =>
                {
                    b.HasOne("MillEngine.Shared.Models.DTOs.CollectionEntry", null)
                        .WithMany("CollectionCards")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithOne("Commander")
                        .HasForeignKey("MillEngine.Shared.Models.DTOs.CardEntry", "DeckCommanderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithMany("DeckCards")
                        .HasForeignKey("DeckMainId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithMany("MaybeList")
                        .HasForeignKey("DeckMaybeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithOne("Partner")
                        .HasForeignKey("MillEngine.Shared.Models.DTOs.CardEntry", "DeckPartnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithMany("SideBoard")
                        .HasForeignKey("DeckSideId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MillEngine.Shared.Models.DTOs.DeckEntry", null)
                        .WithMany("WishList")
                        .HasForeignKey("DeckWishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.CollectionEntry", b =>
                {
                    b.Navigation("CollectionCards");
                });

            modelBuilder.Entity("MillEngine.Shared.Models.DTOs.DeckEntry", b =>
                {
                    b.Navigation("Commander")
                        .IsRequired();

                    b.Navigation("DeckCards");

                    b.Navigation("MaybeList");

                    b.Navigation("Partner")
                        .IsRequired();

                    b.Navigation("SideBoard");

                    b.Navigation("WishList");
                });
#pragma warning restore 612, 618
        }
    }
}
